numpy 패키지 함수와 속성
-배열속성
  dtype : 요소의 type / 배열 요소의 자료형 (예: int32, float64)
  itemsize : 한 요소의 bytesize / 한 요소의 메모리 크기(바이트). 예: int32 → 4 bytes
  ndim : 차원수(축수) / 배열의 차원 수(축 수). 1차원, 2차원, 3차원...
  size : 배열 요소 갯수 / 배열에 포함된 전체 요소의 개수
  shape : 배열 구조 변환에 사용됨.(튜플) / 배열의 구조 (튜플 형태, 예: (3, 5)), 차원 변경 시 사용

-배열 생성 함수 *표시=강사님 강조
 np.array(obj, dtype, copy=T)
 np.array(obj, dtype, copy=T).reshape(구조)
 *np.ones(tup, dtype)
 *np.zeros(tup, dtype)
 np.full(tup, dtype)
 np.empty(tup, dtype)
 *np.random.random(tup) : 0~1미만 균등분포를 갖는 난수배열
 np.random.uniform(low=0, high-1.0, tup) : low~high미만 균등분포를 갖는 난수 배열
 np.random.normal(loc=0, scale=1.0, size=tup) : 평균loc, 표준편차scale의 정규분포를 갖는 난수 배열
 np.random.rand(n) : 균등분포의 1차원 난수배열(난수갯수 n개)
 np.random.randn(n) : 표준정규분포의 1차원 난수 배열(난수갯수 n개)
 np.linspace(from, to, count, dtype) : from부터 to까지 count개 1차원 배열
 np.arange(from, stop, step) : from부터 stop앞까지 step 증감하는 1차월 배열
            start 부터 stop 전까지 step 간격으로 숫자를 생성하는 함수
	예: np.arange(0, 10, 2) → [0, 2, 4, 6, 8]

-배열 차원 변경
 reshape([면수], 행수, 열수) : -1 사용하면 자동계산
	배열의 형태(shape)를 바꾸는 함수
	new_shape은 튜플 형태로 전달 ((행, 열))
	원소 개수는 같아야 변경 가능
	예: a.reshape(3, 5) → 총 15개의 요소가 있어야 가능
 resize(tup) : -1불가
 ravel(), flatten() : 1차원 변경
 transpose, T : 전치행렬
 ary[:, np.newaxis] == np.expand_dims(ary, axis) 차원증가

-배열 열산
 요소별 연산, 브로드캐이스팅
 행렬연산(2차원) @(dat함수), 단위행렬(정방행렬)
 범용함수 np.add(), np.multiply(), np.substract(), np.sqrt()

-배열 합치기
 np.vstack(tup)
 np.hstack(tup)
 np.dstack(tup) : 마지막 축(열)들끼리 합침

 np.column_stack(tup) : 1차원 배열을 열단위로 배열하여 2차원으로 합침
 np.row_stack(tup) : 행단위로 합침
 np.stack(tup, axis)

 np.r_[a, b,..] : row단위로 쌓음
 np.c_[a, b,..] : 컬럼으로 쌓아서 합침

-배열 분리하기
 np.vsplit(ary, 정수나 인덱스벡터) == np.split(ary, 정수나 인덱스벡터, axis=0)
 np.hsplit(ary, 정수나 인덱스벡터) == np.split(ary, 정수나 인덱스벡터, axis=1)
 np.dsplit(ary, 정수나 인덱스벡터) == np.split(ary, 정수나 인덱스벡터, axis=-1)
 np.array_split(ary, 정수나 인덱스벡터, axis) : 나눠지지 않는 정수로도 split 가능

-저장
배열저장 : pkl ,npy
딥러닝모델저장 : h5(win10에서 GPU사용 시), keras
머신러닝 모델 저장 : pkl, joblib