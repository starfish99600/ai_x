1절. 예외처리
예외가 날 가능성이 있는 부분에 대해 미리 예상하고, 그에 대해 처리를 프로그래밍하는 것

2절. try~except로 예외처리
 가. try~except로 예외처리
try:
    예외가 발생할 가능성이 있는 명령어들
except:
    예외가 발생했을 경우 실행할 명령어들

 나. 예외를 지정한 처리
try:
    예외가 발생할 수도 있는 문장들
except 예외타입1:
    해당 예외가 발생할 경우 실행할 문장
except 예외타입2:
    해당 예외가 발생할 경우 실행할 문장

 다. 예외메세지(예외인수)
try :
    예외가 발생할수도 있는 구문
except [예외타입 as e]:
    예외가 발생되면 수행할 구문
else:
    try절을 수행하다 예외가 발생하지 않은 경우 else절을 한번 수행(자주 사용되진 않음.)
finally :
    예외가 발생 안하면 try-else-finally절 수행
    예외가 발생하면 try 수행중 except - finally절 수행

3절. raise : 강제 예외 발생

4절. 추상클래스
-추상클래스 : 객체를 생성할 수 없는 클래스. 상속받을 클래스의 포맷 제공
-추상메소드 : 호출할 수 없는 메소드

5절. 파일 정리 작업(with 절 이용)
- with 문 : 파일, 데이터베이스, 락(lock) 같은 **자원 사용 후 자동으로 정리(close)**해주는 문법
- 문법 : with open('파일경로', '모드') as 변수명: